<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.tnet.dao.MyPageDAO">

	<!-- 마이페이지 모집중리스트 -->
	<select id="getKanbanList" resultType="com.project.tnet.dto.Board">
		SELECT b.board_id, b.title, ts1.low_name AS give_talent, ts2.low_name AS receive_talent, s.status_contents AS status_code
		FROM board b
		JOIN talent_small ts1 ON b.give_talent = ts1.low_code
		JOIN talent_small ts2 ON b.receive_talent = ts2.low_code
		JOIN status s ON b.status_code = s.status_code
		WHERE b.status_code IN ('SC01', 'SC02', 'SC03')
		AND b.writer_nickname = #{nickname}
		AND delete_yn = 'N'
	</select>

	<!-- 마이페이지 모집중리스트 삭제 -->
	<update id="deleteKanban" parameterType="java.util.List">
	    UPDATE board
	    SET delete_yn = 'Y'
	    WHERE board_id IN
	    <foreach collection="list" item="item" open="(" separator="," close=")">
	        #{item}
	    </foreach>
	</update>
	
	<!-- 칸반보드 수락 리스트 -->
	<select id="getKanbanBoardAccept" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code IN ('SC07', 'SC08', 'SC10') AND c.writer_nickname = #{nickName} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC07', 'SC08', 'SC10') AND c.applyer_nickname = #{nickName} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code IN ('SC07', 'SC08', 'SC10') AND c.writer_nickname = #{nickName})
		    OR
		    (c.applyer_status_code IN ('SC07', 'SC08', 'SC10') AND c.applyer_nickname = #{nickName})
		    AND b.delete_yn = 'Y'
	</select>
	
	<!-- 칸반보드 대기 리스트 -->
	<select id="getKanbanBoardWaiting" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code IN ('SC02', 'SC03') AND c.writer_nickname = #{nickName} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC02', 'SC03') AND c.applyer_nickname = #{nickName} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code IN ('SC02', 'SC03') AND c.writer_nickname = #{nickName})
		    OR
		    (c.applyer_status_code IN ('SC02', 'SC03') AND c.applyer_nickname = #{nickName})
		    AND b.delete_yn = 'N'
	</select>
	
	<!-- 수락요청일때의 태그 -->
	<select id="getCourseAgreeInvolve" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code IN ('SC07', 'SC07') AND c.writer_nickname = #{writer_nickname} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC07', 'SC07') AND c.applyer_nickname = #{writer_nickname} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code IN ('SC07', 'SC07') AND c.writer_nickname = #{writer_nickname})
		    OR
		    (c.applyer_status_code IN ('SC07', 'SC07') AND c.applyer_nickname = #{writer_nickname})
		    and course_id = #{course_id}
	
	
	</select>
	<!-- 완료 요청으로 들어갔을때 수강값 -->
	<select id="getCourseCompleteAgree" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code IN ('SC04', 'SC05') AND c.writer_nickname = #{writer_nickname} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC04', 'SC05') AND c.applyer_nickname = #{writer_nickname} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    ((c.writer_status_code IN ('SC04', 'SC05') AND c.writer_nickname = #{writer_nickname})
		    OR
		    (c.applyer_status_code IN ('SC04', 'SC05') AND c.applyer_nickname = #{writer_nickname}))
		    AND b.delete_yn = 'Y' and course_id = #{course_id}
	</select>
	
	<!-- 완료되었을때의 course -->
	<select id="getCourseCompleteInvolve" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code = 'SC06' AND c.writer_nickname = #{writer_nickname} THEN s1.status_contents
		        WHEN c.applyer_status_code = 'SC06' AND c.applyer_nickname = #{writer_nickname} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code = 'SC06' AND c.writer_nickname = #{writer_nickname})
		    OR
		    (c.applyer_status_code = 'SC06' AND c.applyer_nickname = #{writer_nickname})
		     and course_id = #{course_id}
	
	
	</select>
	<!-- 수락 요청 involve일 때의 태그 -->
	<select id="getCourse" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code IN ('SC02', 'SC03') AND c.writer_nickname = #{writer_nickname} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC02', 'SC03') AND c.applyer_nickname = #{writer_nickname} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code IN ('SC02', 'SC03') AND c.writer_nickname = #{writer_nickname})
		    AND
		    (c.applyer_status_code IN ('SC02', 'SC03') AND c.applyer_nickname = #{applyer_nickname})
		    AND b.delete_yn = 'N' and course_id = #{course_id}
	
	
	</select>
	
	<select id="getCoursebyId">
		select * 
		from course
		where course_id = #{course_id}
	
	</select>
	
	<!-- 칸반보드 거절 리스트 -->
	<select id="getKanbanBoardReject" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code = 'SC11' AND c.writer_nickname = #{nickName} THEN s1.status_contents
		        WHEN c.applyer_status_code = 'SC11' AND c.applyer_nickname = #{nickName} THEN s2.status_contents
		        ELSE NULL
		    END status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    ((c.writer_status_code = 'SC11' AND c.writer_nickname = #{nickName})
		    OR
		    (c.applyer_status_code = 'SC11' AND c.applyer_nickname = #{nickName}))
		    AND c.delete_yn = 'N'
	</select>
	
	<!-- 칸반보드 완료 리스트 -->
	<select id="getKanbanBoardCompleted" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code = 'SC06' AND c.writer_nickname = #{nickName} THEN s1.status_contents
		        WHEN c.applyer_status_code = 'SC06' AND c.applyer_nickname = #{nickName} THEN s2.status_contents
		        ELSE NULL
		    END status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code = 'SC06' AND c.writer_nickname = #{nickName})
		    OR
		    (c.applyer_status_code = 'SC06' AND c.applyer_nickname = #{nickName})
		    AND b.delete_yn = 'Y'
	</select>
	
	<!-- 칸반보드 완료대기 리스트 -->
	<select id="getKanbanBoardCompleted_Waiting" resultType="com.project.tnet.dto.Course">
		SELECT
			    CASE
			        WHEN c.writer_status_code IN ('SC04', 'SC05') AND c.writer_nickname = #{nickName} THEN s1.status_contents
			        WHEN c.applyer_status_code IN ('SC04', 'SC05') AND c.applyer_nickname = #{nickName} THEN s2.status_contents
			        ELSE NULL
			    END AS status_code,
		    	c.course_id,
			    c.writer_nickname, c.applyer_nickname,
			    c.board_id,
			    b.title AS title,
			    c.start_date
			FROM course c
			JOIN board b ON c.board_id = b.board_id
			JOIN status s1 ON c.writer_status_code = s1.status_code
			JOIN status s2 ON c.applyer_status_code = s2.status_code
			WHERE
			    (c.writer_status_code IN ('SC04', 'SC05') AND c.writer_nickname = #{nickName})
			    OR
			    (c.applyer_status_code IN ('SC04', 'SC05') AND c.applyer_nickname = #{nickName})
			    AND b.delete_yn = 'Y'
	</select>
	
	<!-- 칸반보드 휴지통 리스트 -->
	<select id="getKanbanBoardTrash" resultType="com.project.tnet.dto.Course">
		SELECT
		    CASE
		        WHEN c.writer_status_code IN ('SC09', 'SC12') AND c.writer_nickname = #{nickName} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC09', 'SC12') AND c.applyer_nickname = #{nickName} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    c.start_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    (c.writer_status_code IN ('SC09', 'SC12') AND c.writer_nickname = #{nickName})
		    OR
		    (c.applyer_status_code IN ('SC09', 'SC12') AND c.applyer_nickname = #{nickName})
		    AND b.delete_yn = 'Y'
	</select>
	
	
	<update id="updateAccept" parameterType="int">
	  <![CDATA[
	  BEGIN
	    UPDATE course
	    SET
	        writer_status_code =
	            CASE
	                WHEN writer_status_code = 'SC02' THEN 'SC07'
	                ELSE
	                    CASE
	                        WHEN writer_status_code = 'SC02' THEN 'SC11'
	                        ELSE writer_status_code
	                    END
	            END,
	        applyer_status_code =
	            CASE
	                WHEN writer_status_code = 'SC02' THEN 'SC07'
	                WHEN applyer_status_code = 'SC03' THEN 'SC07'
	                ELSE
	                    CASE
	                        WHEN writer_status_code = 'SC02' THEN 'SC11'
	                        ELSE
	                            CASE
	                                WHEN applyer_status_code = 'SC02' THEN 'SC11'
	                                ELSE applyer_status_code
	                            END
	                    END
	            END,
	        start_date =
	            CASE
	                WHEN writer_status_code = 'SC02' THEN sysdate
	                ELSE
	                    CASE
	                        WHEN writer_status_code = 'SC02' THEN sysdate
	                        ELSE start_date
	                    END
	            END
	    WHERE
	        writer_status_code = 'SC02'
	        AND course_id = #{course_id};
	        
	    UPDATE course
	    SET
	        writer_status_code = 'SC11',
	        applyer_status_code = 'SC11'
	    WHERE
	        writer_status_code = 'SC02'
	        AND board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	        
	    UPDATE board
	    SET
	        status_code = 'SC07', delete_yn='Y'
	    WHERE
	        board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	  END;
	  ]]>
	</update>
	
	
	<update id="updateReject" parameterType="java.util.Map">
	<![CDATA[
	  BEGIN
	    UPDATE course
	    SET
	        writer_status_code = CASE
	            WHEN writer_status_code = 'SC02' THEN 'SC11'
	            ELSE writer_status_code
	        END,
	        applyer_status_code = CASE
	            WHEN writer_status_code = 'SC02' THEN 'SC11'
	            WHEN applyer_status_code = 'SC03' THEN 'SC11'
	            ELSE applyer_status_code
	        END
	    WHERE
	        writer_status_code = 'SC02'
	        AND course_id = #{course_id};
	  END;
	  ]]>
    </update>
    
    <update id="updateWaiting" parameterType="java.util.Map">
		
	    <![CDATA[
	    BEGIN
			UPDATE course
			SET
			writer_status_code = 'SC02',
			applyer_status_code = 'SC03'
			
			WHERE
			    course_id = #{course_id};
			    
			UPDATE board
		    SET
		      status_code = 'SC02'
		    WHERE
		      board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
		END;
	    ]]>
	</update>
	
	<update id="updateCompleted" parameterType="java.util.Map">
		
	    <![CDATA[
	    BEGIN
			UPDATE course
			SET
			writer_status_code = 'SC06',
			applyer_status_code = 'SC06',
			end_date = sysdate
			
			WHERE
			    course_id = #{course_id};
			
			UPDATE board
	        SET
	            status_code = 'SC06'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	    END;
	    ]]>
	</update>
	
	<update id="updateTrash" parameterType="java.util.Map">
		
	    <![CDATA[
	    BEGIN
			UPDATE course
	        SET
	            writer_status_code = CASE
	                WHEN writer_status_code = 'SC06' THEN 'SC09'
	                ELSE writer_status_code
	            END,
	            applyer_status_code = CASE
	                WHEN applyer_status_code = 'SC06' THEN 'SC09'
	                ELSE applyer_status_code
	            END
	        WHERE
	            course_id = #{course_id};
	            
	        UPDATE board
	        SET
	            status_code = 'SC09'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});

	    END;
	    ]]>
	</update>
	
	<select id="getDetailAccept" resultType="com.project.tnet.dto.Course">
    	SELECT
    		CASE
		        WHEN c.writer_status_code IN ('SC04', 'SC07', 'SC08', 'SC10') AND c.writer_nickname = #{nickName} THEN s1.status_contents
		        WHEN c.applyer_status_code IN ('SC04', 'SC07', 'SC08', 'SC10') AND c.applyer_nickname = #{nickName} THEN s2.status_contents
		        ELSE NULL
		    END AS status_code,
		    c.course_id,
		    c.writer_nickname, 
		    c.applyer_nickname,
		    c.board_id,
		    b.title AS title,
		    ts1.low_name AS give_talent,
		    ts2.low_name AS receive_talent,
		    c.start_date,
		    c.end_date
		FROM course c
		JOIN board b ON c.board_id = b.board_id
		JOIN talent_small ts1 ON c.give_talent = ts1.low_code
		JOIN talent_small ts2 ON c.receive_talent = ts2.low_code
		JOIN status s1 ON c.writer_status_code = s1.status_code
		JOIN status s2 ON c.applyer_status_code = s2.status_code
		WHERE
		    course_id = #{course_id}
    </select>
    
    <update id="updateCompletedWaiting" parameterType="java.util.Map">
	    <![CDATA[
	    BEGIN
	        UPDATE course
	        SET
	            writer_status_code = 
	                CASE
	                    WHEN writer_status_code = 'SC07' AND writer_nickname = #{nickName} THEN 'SC04'
	                    WHEN writer_status_code = 'SC07' AND applyer_nickname = #{nickName} THEN 'SC05'
	                    ELSE writer_status_code
	                END,
	            applyer_status_code = 
	                CASE
	                    WHEN applyer_status_code = 'SC07' AND writer_nickname = #{nickName} THEN 'SC05'
	                    WHEN applyer_status_code = 'SC07' AND applyer_nickname = #{nickName} THEN 'SC04'
	                    ELSE applyer_status_code
	                END
	        WHERE course_id = #{course_id};

	        UPDATE board
	        SET
	            status_code = 'SC05'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	      
	    	
	    	UPDATE course
		    SET
		        delete_yn = 'Y'
		    WHERE
		        writer_status_code = 'SC11'
		        AND board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	        
	        
	    END;
	    ]]>
	</update>
	
	<update id="updateCancel" parameterType="java.util.Map">
	    <![CDATA[
	    BEGIN
	        UPDATE course
	        SET
                writer_status_code =
		            CASE
		                WHEN writer_status_code = 'SC07' AND writer_nickname = #{nickName} THEN 'SC08'
		                WHEN writer_status_code = 'SC07' THEN 'SC10'
		                ELSE writer_status_code
		            END,
		        applyer_status_code =
		            CASE
		                WHEN applyer_status_code = 'SC07' AND applyer_nickname = #{nickName} THEN 'SC08'
		                WHEN applyer_status_code = 'SC07' THEN 'SC10'
		                ELSE applyer_status_code
		            END
	        WHERE course_id = #{course_id};
	
	        UPDATE board
	        SET
	            status_code = 'SC10'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	    END;
	    ]]>
	</update>
	
	<update id="updateReAccept" parameterType="java.util.Map">
	    <![CDATA[
	    BEGIN
	        UPDATE course
	        SET
	            writer_status_code = 
	                CASE
	                    WHEN writer_status_code IN ('SC04', 'SC05', 'SC08') AND writer_nickname = #{nickName} THEN 'SC07'
	                    WHEN writer_status_code IN ('SC04', 'SC05', 'SC10') THEN 'SC07'
	                    ELSE writer_status_code
	                END,
	            applyer_status_code = 
	                CASE
	                    WHEN applyer_status_code IN ('SC04', 'SC05', 'SC08') AND applyer_nickname = #{nickName} THEN 'SC07'
	                    WHEN applyer_status_code IN ('SC04', 'SC05', 'SC10') THEN 'SC07'
	                    ELSE applyer_status_code
	                END
	            
	        WHERE course_id = #{course_id};
	
	        UPDATE board
	        SET
	            status_code = 'SC07'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	    END;
	    ]]>
	</update>
	
	<update id="updateCancelAccept" parameterType="java.util.Map">
	    <![CDATA[
	    BEGIN
	        UPDATE course
	        SET
	            writer_status_code = 
	                CASE
	                    WHEN writer_status_code = 'SC10' AND writer_nickname = #{nickName} THEN 'SC12'
	                    WHEN writer_status_code = 'SC08' THEN 'SC12'
	                    ELSE writer_status_code
	                END,
	            applyer_status_code = 
	                CASE
	                    WHEN applyer_status_code = 'SC10' AND applyer_nickname = #{nickName} THEN 'SC12'
	                    WHEN applyer_status_code = 'SC08' THEN 'SC12'
	                    ELSE applyer_status_code
	                END
	            
	        WHERE course_id = #{course_id};
	
	        UPDATE board
	        SET
	            status_code = 'SC01', delete_yn='N'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	    END;
	    ]]>
	</update>
	
	
	<update id="trashClear" parameterType="java.util.Map">
	    <![CDATA[
	    BEGIN
	        UPDATE course
	        SET
	            writer_status_code = 
	                CASE
	                    WHEN writer_status_code IN ('SC09', 'SC12') AND writer_nickname = #{nickName} THEN 'SC13'
	                    ELSE writer_status_code
	                END,
	            applyer_status_code = 
	                CASE
	                    WHEN applyer_status_code IN ('SC09', 'SC12') AND applyer_nickname = #{nickName} THEN 'SC13'
	                    ELSE applyer_status_code
	                END
	            
	        WHERE course_id = #{course_id};
	
	        UPDATE board
	        SET
	            status_code = 'SC13', delete_yn='Y'
	        WHERE
	            board_id = (SELECT board_id FROM course WHERE course_id = #{course_id});
	    END;
	    ]]>
	</update>
    
</mapper>